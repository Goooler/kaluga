name: Android Emulator tests
on:
  pull_request:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project (Gradle module) to run tests for'
        required: false
        type: string
      video:
        description: 'Record video'
        required: false
        type: boolean

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=\"-Xmx8G -XX:MaxMetaspaceSize=512m -Dorg.gradle.daemon=false -Dkotlin.incremental=false\" -Dorg.gradle.daemon=false -Dkotlin.incremental=false -Dkotlin.daemon.jvm.options=-Xmx8G,-XX:MaxMetaspaceSize=512m,-Dorg.gradle.daemon=false,-Dkotlin.incremental=false"
  JAVA_OPTS: "-Xmx8G -XX:MaxMetaspaceSize=512m -Dorg.gradle.daemon=false -Dkotlin.incremental=false"
  ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 120

jobs:
  build:
    uses: ./.github/workflows/setup_macos.yaml
    with:
      gradleTask: bundleLibRuntimeToJarDebug
      project: ${{ inputs.project }}
      projectBlacklist: hud

  test:
    needs: build
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        api-level: [23, 33]
        project: ${{ fromJSON(needs.build.outputs.projects) }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup tools and cache for workspace
        uses: ./.github/workflows/setup_tools_macos/
        with:
          kotlinVersion: ${{ needs.build.outputs.kotlinVersion }}

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd.v5-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          arch: x86_64
          disk-size: 3G
          ram-size: 3G
          heap-size: 1500M
          profile: 3.4in WQVGA
          script: echo "Generated AVD snapshot for caching."

      - name: run ffmpeg screen capture
        if: inputs.video
        run: |
          brew install ffmpeg
          ffmpeg -nostdin -f avfoundation -i 0 recording-${{ matrix.project }}-${{ matrix.api-level }}.mov &
          sleep 5

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          arch: x86_64
          disk-size: 3G
          ram-size: 3G
          heap-size: 1500M
          profile: 3.4in WQVGA
          script: ./gradlew :${{ matrix.project }}:connectedDebugAndroidTest

      - name: stop screen capture
        if: inputs.video
        continue-on-error: true
        shell: bash
        run: |
          PID=$(ps aux | grep -m 1 ffmpeg | awk '{print $2}')
          python -c "import os, signal; os.kill($PID, signal.SIGINT)"

      - name: upload video
        if: inputs.video
        continue-on-error: true
        uses: actions/upload-artifact@master
        with:
          name: Recording-${{ matrix.project }}-${{ matrix.api-level }}
          path: recording-${{ matrix.project }}-${{ matrix.api-level }}.mov
